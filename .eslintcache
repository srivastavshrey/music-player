[{"D:\\React Course\\Music App\\music-player\\src\\index.js":"1","D:\\React Course\\Music App\\music-player\\src\\App.js":"2","D:\\React Course\\Music App\\music-player\\src\\reportWebVitals.js":"3","D:\\React Course\\Music App\\music-player\\src\\components\\Song.js":"4","D:\\React Course\\Music App\\music-player\\src\\components\\Player.js":"5","D:\\React Course\\Music App\\music-player\\src\\components\\Library.js":"6","D:\\React Course\\Music App\\music-player\\src\\components\\LibrarySongs.js":"7","D:\\React Course\\Music App\\music-player\\src\\data.js":"8"},{"size":478,"mtime":1609869879909,"results":"9","hashOfConfig":"10"},{"size":1107,"mtime":1611822065086,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":301,"mtime":1609433078126,"results":"13","hashOfConfig":"10"},{"size":4535,"mtime":1611854849687,"results":"14","hashOfConfig":"10"},{"size":1449,"mtime":1611642884054,"results":"15","hashOfConfig":"10"},{"size":854,"mtime":1611852503271,"results":"16","hashOfConfig":"10"},{"size":2619,"mtime":1611822057012,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"11aakod",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"D:\\React Course\\Music App\\music-player\\src\\index.js",[],["40","41"],"D:\\React Course\\Music App\\music-player\\src\\App.js",["42"],"import REACT, { useState, useRef } from \"react\";\nimport Song from \"./components/Song\";\nimport Player from \"./components/Player\";\nimport Library from \"./components/Library\";\nimport \"./assets/app.scss\";\nimport Data from \"./data\";\nfunction App() {\n  const [songs, setSongs] = useState(Data());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const audioRef = useRef(null);\n\n  return (\n    <div className=\"App\">\n      <Song\n        song={songs}\n        setSongs={setSongs}\n        currentSong={currentSong}\n        setCurrentSong={setCurrentSong}\n      />\n      <Player\n        isPlaying={isPlaying}\n        setIsPlaying={setIsPlaying}\n        currentSong={currentSong}\n        audioRef={audioRef}\n        songs={songs}\n        setCurrentSong={setCurrentSong}\n        setSongs={setSongs}\n      />\n      <Library\n        audioRef={audioRef}\n        songs={songs}\n        setCurrentSong={setCurrentSong}\n        isPlaying={isPlaying}\n        setIsPlaying={setIsPlaying}\n        setSongs={setSongs}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","D:\\React Course\\Music App\\music-player\\src\\reportWebVitals.js",[],"D:\\React Course\\Music App\\music-player\\src\\components\\Song.js",["43"],"import REACT from \"react\";\r\n\r\nconst Song = ({ currentSong }) => {\r\n  return (\r\n    <div className=\"song-container\">\r\n      <img alt={currentSong.name} src={currentSong.cover}></img>\r\n      <h2>{currentSong.name}</h2>\r\n      <h3>{currentSong.artist}</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Song;\r\n","D:\\React Course\\Music App\\music-player\\src\\components\\Player.js",["44","45","46"],"import REACT, { useRef, useState, useEffect } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport {\r\n  faPlay,\r\n  faAngleLeft,\r\n  faAngleRight,\r\n  faPause,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nconst Player = ({\r\n  currentSong,\r\n  isPlaying,\r\n  setIsPlaying,\r\n  audioRef,\r\n  songs,\r\n  setCurrentSong,\r\n  setSongs,\r\n}) => {\r\n  const [duration, setDuration] = useState({\r\n    currentTime: 0,\r\n    duration: 0,\r\n    animationPercentage: 0,\r\n  });\r\n\r\n  const activeLibraryHandler = (nextPrev) => {\r\n    const newSong = songs.map((song) => {\r\n      if (song.id === nextPrev.id) {\r\n        return { ...song, active: true };\r\n      } else {\r\n        return { ...song, active: false };\r\n      }\r\n    });\r\n    setSongs(newSong);\r\n  };\r\n\r\n  const playSong = () => {\r\n    if (isPlaying) {\r\n      audioRef.current.pause();\r\n      setIsPlaying(!isPlaying);\r\n      return;\r\n    } else {\r\n      audioRef.current.play();\r\n      setIsPlaying(!isPlaying);\r\n    }\r\n  };\r\n\r\n  const timeUpdate = (e) => {\r\n    const current = e.target.currentTime;\r\n    const duration = e.target.duration;\r\n    const roundedCurrent = Math.round(current);\r\n    const roundedDuration = Math.round(duration);\r\n    const animate = Math.round((roundedCurrent / roundedDuration) * 100);\r\n    setDuration({\r\n      ...duration,\r\n      currentTime: current,\r\n      duration: duration,\r\n      animationPercentage: animate,\r\n    });\r\n  };\r\n  const getTime = (time) => {\r\n    return (\r\n      Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n    );\r\n  };\r\n  const dragHandler = (e) => {\r\n    audioRef.current.currentTime = e.target.value;\r\n    setDuration({ ...duration, currentTime: e.target.value });\r\n  };\r\n  const skipTrackHandler = async (direction) => {\r\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\r\n    if (direction === \"skip-forward\") {\r\n      await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\r\n      if (isPlaying) audioRef.current.play();\r\n      activeLibraryHandler(songs[(currentIndex + 1) % songs.length]);\r\n    } else if (direction === \"skip-back\") {\r\n      if (currentIndex === 0) {\r\n        currentIndex = songs.length;\r\n        await setCurrentSong(songs[currentIndex - 1]);\r\n        if (isPlaying) audioRef.current.play();\r\n        activeLibraryHandler(songs[currentIndex - 1]);\r\n        return;\r\n      } else {\r\n        await setCurrentSong(songs[currentIndex - 1]);\r\n        if (isPlaying) audioRef.current.play();\r\n        activeLibraryHandler(songs[currentIndex - 1]);\r\n      }\r\n    }\r\n  };\r\n  const songEndHandler = async () => {\r\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\r\n    await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\r\n    if (isPlaying) audioRef.current.play();\r\n  };\r\n\r\n  //style\r\n  const trackAnim = {\r\n    transform: `translateX(${duration.animationPercentage}%)`,\r\n  };\r\n\r\n  return (\r\n    <div className=\"player\">\r\n      <div className=\"time-control\">\r\n        <p>{getTime(duration.currentTime)}</p>\r\n        <div\r\n          style={{\r\n            background: `linear-gradient(to right,${currentSong.color[0]},${currentSong.color[1]})`,\r\n          }}\r\n          className=\"track\"\r\n        >\r\n          <input\r\n            min={0}\r\n            max={duration.duration}\r\n            value={duration.currentTime}\r\n            onChange={dragHandler}\r\n            type=\"range\"\r\n            name=\"\"\r\n            id=\"\"\r\n          />\r\n          <div style={trackAnim} className=\"animate-track\"></div>\r\n        </div>\r\n        <p>{duration.duration ? getTime(duration.duration) : \"0:00\"}</p>\r\n      </div>\r\n      <div className=\"play-control\">\r\n        <FontAwesomeIcon\r\n          onClick={() => {\r\n            skipTrackHandler(\"skip-back\");\r\n          }}\r\n          className=\"skip-back\"\r\n          size=\"2x\"\r\n          icon={faAngleLeft}\r\n        />\r\n        <FontAwesomeIcon\r\n          onClick={playSong}\r\n          className=\"play\"\r\n          size=\"2x\"\r\n          icon={!isPlaying ? faPlay : faPause}\r\n        />\r\n        <FontAwesomeIcon\r\n          onClick={() => {\r\n            skipTrackHandler(\"skip-forward\");\r\n          }}\r\n          className=\"skip-forward\"\r\n          size=\"2x\"\r\n          icon={faAngleRight}\r\n        />\r\n      </div>\r\n      <audio\r\n        onTimeUpdate={timeUpdate}\r\n        onLoadedMetadata={timeUpdate}\r\n        ref={audioRef}\r\n        onEnded={songEndHandler}\r\n        src={currentSong.audio}\r\n      ></audio>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Player;\r\n","D:\\React Course\\Music App\\music-player\\src\\components\\Library.js",["47","48"],"import REACT, { useState } from \"react\";\r\nimport LibrarySong from \"./LibrarySongs\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faWindowClose } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Library = ({\r\n  setCurrentSong,\r\n  songs,\r\n  audioRef,\r\n  isPlaying,\r\n  setIsPlaying,\r\n  setSongs,\r\n}) => {\r\n  const openSidebar = (e) => {\r\n    document.getElementById(\"lib\").style = \"width:400px\";\r\n    console.log(\"clicked\");\r\n  };\r\n\r\n  const closeSidebar = (e) => {\r\n    document.getElementById(\"lib\").style = \"width:0px\";\r\n    console.log(\"close-click\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"s-bar\">\r\n      <button onClick={openSidebar} className=\"library-button\">\r\n        Library\r\n      </button>\r\n      <div className=\"library\" id=\"lib\">\r\n        <h2>Library</h2>\r\n        <FontAwesomeIcon\r\n          className=\"close-library\"\r\n          size=\"2x\"\r\n          icon={faWindowClose}\r\n          onClick={closeSidebar}\r\n        />\r\n        <div className=\"library-songs\"></div>\r\n        {songs.map((song) => (\r\n          <LibrarySong\r\n            song={song}\r\n            setCurrentSong={setCurrentSong}\r\n            songs={songs}\r\n            id={song.id}\r\n            key={song.id}\r\n            audioRef={audioRef}\r\n            isPlaying={isPlaying}\r\n            setIsPlaying={setIsPlaying}\r\n            setSongs={setSongs}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Library;\r\n","D:\\React Course\\Music App\\music-player\\src\\components\\LibrarySongs.js",["49"],"import REACT from \"react\";\r\n\r\nconst LibrarySong = ({\r\n  song,\r\n  songs,\r\n  setCurrentSong,\r\n  audioRef,\r\n  isPlaying,\r\n  setIsPlaying,\r\n  setSongs,\r\n  id,\r\n}) => {\r\n  const songSelector = async () => {\r\n    await setCurrentSong(song);\r\n    if (isPlaying) audioRef.current.play();\r\n    const newSong = songs.map((song) => {\r\n      if (song.id === id) {\r\n        return { ...song, active: true };\r\n      } else {\r\n        return { ...song, active: false };\r\n      }\r\n    });\r\n    setSongs(newSong);\r\n  };\r\n  return (\r\n    <div\r\n      onClick={songSelector}\r\n      className={`library-song  ${song.active ? \"selected\" : \"\"}`}\r\n    >\r\n      <img alt={song.name} src={song.cover}></img>\r\n      <div className=\"song-description\">\r\n        <h3>{song.name}</h3>\r\n        <h4>{song.artist}</h4>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LibrarySong;\r\n","D:\\React Course\\Music App\\music-player\\src\\data.js",[],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":1,"column":8,"nodeType":"56","messageId":"57","endLine":1,"endColumn":13},{"ruleId":"54","severity":1,"message":"55","line":1,"column":8,"nodeType":"56","messageId":"57","endLine":1,"endColumn":13},{"ruleId":"54","severity":1,"message":"55","line":1,"column":8,"nodeType":"56","messageId":"57","endLine":1,"endColumn":13},{"ruleId":"54","severity":1,"message":"58","line":1,"column":17,"nodeType":"56","messageId":"57","endLine":1,"endColumn":23},{"ruleId":"54","severity":1,"message":"59","line":1,"column":35,"nodeType":"56","messageId":"57","endLine":1,"endColumn":44},{"ruleId":"54","severity":1,"message":"55","line":1,"column":8,"nodeType":"56","messageId":"57","endLine":1,"endColumn":13},{"ruleId":"54","severity":1,"message":"60","line":1,"column":17,"nodeType":"56","messageId":"57","endLine":1,"endColumn":25},{"ruleId":"54","severity":1,"message":"55","line":1,"column":8,"nodeType":"56","messageId":"57","endLine":1,"endColumn":13},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"no-unused-vars","'REACT' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]